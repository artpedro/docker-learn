# bind mount permite compartilhar um diretório do host
# com o container

# o container tem acesso simultaneo aos diretórios bindados
# ou seja, você pode fazer alteraçõesa ao source code no
# diretório bind e as alterações ocorreram no container

# bind              vs              volumes
# armazena no lugar escolhido       o docker escolhe onde armazenar
# type=bind,src=/path/to/data,target=/usr/local/data    type=volume,src=my-volume,target=/usr/local/data
# data <-> container                 data <-> container

docker run -it --mount type=bind,src="$(pwd)",target=/src ubuntu bash

# inicia um container ubuntu em modo interativo pelo bash com montagem tipo bind, conectando o diretório atual com o diretório /src do container

# verifica-se que mudanças tanto dentro quanto fora do diretório
# refletem nos dois diretórios linkados

# exemplo em getting-started

docker run -dp 3000:3000 -w /app type=bind,src="$(pwd)",target=/app node:18-alpine sh -c "yarn install && yarn run dev"

# inicia um container node na porta 3000 com o workdir
# app com um bind no diretório atual e a pasta /app do
# container e executa no sh o yarn install e yarn run dev
# que inicia o nodemon

docker logs -f <id>

# mostra o que já aconteceu no container

# com o nodemon e as pastas apps linkadas, mudanças no
# source code do host ocorrem no container simultaneamente



